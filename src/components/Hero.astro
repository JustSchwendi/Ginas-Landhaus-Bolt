---
export interface Props {
  title: string;
  subtitle: string;
  backgroundImage: string;
  ctaText?: string;
  ctaLink?: string;
  lang?: string;
}

const { 
  title, 
  subtitle, 
  backgroundImage, 
  ctaText, 
  ctaLink,
  lang = 'de' 
} = Astro.props;
---

<section class="hero" style={`background-image: url(${backgroundImage})`}>
  <div class="hero-overlay"></div>
  <div class="container">
    <div class="hero-content">
      <h1 class="hero-title">{title}</h1>
      <p class="hero-subtitle">{subtitle}</p>
      {ctaText && ctaLink && (
        <a href={ctaLink} class="btn btn-hero">{ctaText}</a>
      )}
    </div>
  </div>
  <div class="scroll-indicator">
    <div class="scroll-arrow"></div>
  </div>
  
  <!-- Clickable overlay to navigate to house details -->
  <a href={lang === 'en' ? '/en/house' : '/haus'} class="hero-link" aria-label={lang === 'en' ? 'Learn more about the house' : 'Mehr über das Haus erfahren'}>
    <span class="sr-only">{lang === 'en' ? 'Click to learn more about our house' : 'Klicken Sie hier, um mehr über unser Haus zu erfahren'}</span>
  </a>
</section>

<style>
  .hero {
    height: 100vh;
    min-height: 600px;
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
    display: flex;
    align-items: center;
    position: relative;
    overflow: hidden;
    cursor: pointer;
  }

  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(139, 69, 19, 0.7) 0%,
      rgba(74, 93, 35, 0.6) 50%,
      rgba(114, 47, 55, 0.7) 100%
    );
    z-index: 1;
  }

  .container {
    position: relative;
    z-index: 2;
  }

  .hero-content {
    max-width: 800px;
    text-align: center;
    margin: 0 auto;
    animation: fadeInUp 1s ease-out;
  }

  .hero-title {
    font-size: clamp(2.5rem, 6vw, 4rem);
    font-weight: 700;
    color: white;
    margin-bottom: var(--spacing-lg);
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
  }

  .hero-subtitle {
    font-size: clamp(1.125rem, 2.5vw, 1.5rem);
    color: var(--color-cream);
    margin-bottom: var(--spacing-xl);
    line-height: 1.6;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
  }

  .btn-hero {
    background: var(--color-accent);
    color: var(--color-text);
    padding: var(--spacing-md) var(--spacing-xl);
    font-size: 1.25rem;
    font-weight: 600;
    border-radius: 50px;
    box-shadow: 0 4px 15px rgba(212, 175, 55, 0.3);
    transition: all 0.3s ease;
    position: relative;
    z-index: 3;
  }

  .btn-hero:hover {
    background: white;
    color: var(--color-primary);
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
  }

  .scroll-indicator {
    position: absolute;
    bottom: var(--spacing-lg);
    left: 50%;
    transform: translateX(-50%);
    z-index: 2;
    animation: bounce 2s infinite;
  }

  .scroll-arrow {
    width: 24px;
    height: 24px;
    border: 2px solid white;
    border-top: none;
    border-left: none;
    transform: rotate(45deg);
    opacity: 0.8;
  }

  .hero-link {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1;
    text-decoration: none;
    display: block;
  }

  .hero-link:hover .hero-overlay {
    background: linear-gradient(
      135deg,
      rgba(139, 69, 19, 0.8) 0%,
      rgba(74, 93, 35, 0.7) 50%,
      rgba(114, 47, 55, 0.8) 100%
    );
  }

  .hero-link:focus {
    outline: none;
  }

  .hero-link:focus .hero-overlay {
    box-shadow: inset 0 0 0 4px rgba(255, 255, 255, 0.8);
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(50px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateX(-50%) translateY(0);
    }
    40% {
      transform: translateX(-50%) translateY(-10px);
    }
    60% {
      transform: translateX(-50%) translateY(-5px);
    }
  }

  @media (max-width: 768px) {
    .hero {
      background-attachment: scroll;
      min-height: 500px;
    }

    .hero-content {
      padding: 0 var(--spacing-md);
    }
  }
</style>